services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: bookmarks
      POSTGRES_USER: ${BM_DB_USER}
      POSTGRES_PASSWORD: ${BM_DB_PASSWORD}
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  migrate:
    image: migrate/migrate:v4.16.2
    command: ["-path", "/migrations", "-database", "postgres://${BM_DB_USER}:${BM_DB_PASSWORD}@db:5432/bookmarks?sslmode=disable", "up"]
    volumes:
      - ./migrations:/migrations
    depends_on:
      db:
        condition: service_healthy
    restart: "no"

  backend:
    build: .
    ports:
      - '8080:8080'
    environment:
      BM_DB_HOST: ${BM_DB_HOST}
      BM_DB_PORT: ${BM_DB_PORT}
      BM_DB_USER: ${BM_DB_USER}
      BM_DB_PASSWORD: ${BM_DB_PASSWORD}
      BM_DB_NAME: ${BM_DB_NAME}
      BM_DB_SSL_MODE: ${BM_DB_SSL_MODE}

      BM_HTTP_HOST: ${BM_HTTP_HOST}
      BM_HTTP_PORT: ${BM_HTTP_PORT}
      BM_HTTP_TIMEOUT: ${BM_HTTP_TIMEOUT}
      BM_HTTP_IDLE_TIMEOUT: ${BM_HTTP_IDLE_TIMEOUT}

      BM_NO_COLOR: ${BM_NO_COLOR}
      BM_DEBUG: ${BM_DEBUG}
    depends_on:
      migrate:
        condition: service_completed_successfully

volumes:
  postgres_data:

